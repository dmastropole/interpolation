% ppsmoo_win
%

function  command = ppsmoo_win (Z, grd_struct, def_tem)

global   PPZ_WIN_ACT

D_default = def_tem(1);
empty_default = def_tem(2);
mask_val_default =  def_tem(3);
F_default = def_tem(4);
Fweight_default = def_tem(4);
N_default = def_tem(6);
S_default = def_tem(7);

command = [];

xmin = grd_struct.x_min;
xmax = grd_struct.x_max;
ymin = grd_struct.y_min;
ymax = grd_struct.y_max;


hfwin = figure;
clf
set (hfwin, 'Position',[50 200 500 500])
set (hfwin, 'NumberTitle', 'off');
set (hfwin, 'Name', 'PPZINIT window');
set (hfwin, 'MenuBar', 'none');
cf_color = get (hfwin, 'Color');
set (gca, 'Visible','off')




     % Display various text strings and controls.
uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.05 0.82 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'X min');
hR1 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.05 0.80 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf))', ...
	'String', num2str(xmin));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.25 0.82 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'X max');
hR2 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.25 0.80 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(xmax));


uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.15 0.74 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Y min');
hR3 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.15 0.72 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(ymin));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.15 0.90 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Y max');
hR4 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.15 0.88 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(ymax));



uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.05 0.63 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Delta x');
hI1 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.05 0.60 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(grd_struct.x_inc));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.25 0.63 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Delta y');
hI2 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.25 0.60 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(grd_struct.y_inc));



uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.05 0.53 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'FIlter type');
hF1 = uicontrol('Style', 'listbox', 'Units', 'Normalized', ...
	'Position',  [0.05 0.40 0.2 0.15], ...
	'FontSize', 12, ...
        'Value', F_default+1, ...
	'Callback', 'uiresume(gcf)', ...
	'String', {'Smooth (S)'  'del2 (L)'  'del2 (D)'});

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.25 0.53 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Weight');
hF2 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.25 0.50 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', '');

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.45 0.53 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Iterations');
hS = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.45 0.50 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(S_default));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.65 0.53 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Distance');
hD = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.65 0.50 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
        'Enable', 'off', ...
	'String', num2str(D_default));



uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.30 0.43 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Missing values');

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.50 0.43 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Empty');
hE1 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.50 0.40 0.15 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(empty_default));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.70 0.43 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Mask');
hE2 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.70 0.40 0.15 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(mask_val_default));


hV= uicontrol('Style', 'CheckBox', 'Units', 'Normalized', ...
	'Position',  [0.65 0.90 0.20 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
        'Value', 0, ...
        'BackgroundColor', cf_color, ...
	'String', 'Verbose');


uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.65 0.72 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Registration');
hN0 = uicontrol('Style', 'RadioButton', 'Units', 'Normalized', ...
	'Position',  [0.65 0.70 0.20 0.05], ...
	'FontSize', 12, ...
	'Callback', 'ppz_win_act', ...
        'Value', 1-N_default, ...
        'BackgroundColor', cf_color, ...
	'String', 'Pixel');

hN1= uicontrol('Style', 'RadioButton', 'Units', 'Normalized', ...
	'Position',  [0.65 0.65 0.20 0.05], ...
	'FontSize', 12, ...
	'Callback', 'ppz_win_act', ...
        'Value', N_default, ...
        'BackgroundColor', cf_color, ...
	'String', 'Node');


hgo = uicontrol('Style', 'Pushbutton', 'Units', 'Normalized', ...
	'Position',  [0.10 0.25 0.15 0.05], ...
	'Callback', 'ppz_win_act', ...
	'FontSize', 12, ...
	'String', 'OK');

hreset = uicontrol('Style', 'Pushbutton', 'Units', 'Normalized', ...
	'Position',  [0.40 0.25 0.15 0.05], ...
	'Callback', 'ppz_win_act', ...
	'FontSize', 12, ...
	'String', 'Reset');

hcancel = uicontrol('Style', 'Pushbutton', 'Units', 'Normalized', ...
	'Position',  [0.70 0.25 0.15 0.05], ...
	'Callback', 'ppz_win_act', ...
	'FontSize', 12, ...
	'String', 'Cancel');

hquit = uicontrol('Style', 'Pushbutton', 'Units', 'Normalized', ...
	'Position',  [0.70 0.15 0.15 0.05], ...
        'BackgroundColor', [1.0 0.8 0.8], ...
	'Callback', 'ppz_win_act', ...
	'FontSize', 12, ...
	'String', 'QUIT');

lokay = 0;
PPZ_WIN_ACT(1) = 0;
while (lokay == 0)
  disp  ('  ... waiting for ppzinit_win action.')
  uiwait (gcf)

  if (PPZ_WIN_ACT(1) == hquit)  
    quit
    end

  if (PPZ_WIN_ACT(1) == hcancel)  
    command = 'CANCEL';
    close (gcf)
    return
    end

  if (PPZ_WIN_ACT(1) == hreset)
    command = 'RESET';
    close (gcf)
    return
    end
    
  if (PPZ_WIN_ACT(1) == hgo)  
    I1 = get (hI1, 'string');
    if (isempty (I1)  )
      fprintf (2, '  *** DELTA X MUST BE SPECIFIED%c.\n', char(7));
      PPZ_WIN_ACT(1) = 0;
     else
      break;
     end  % if check for DELTA before leaving.
    end  % if done.

  if (PPZ_WIN_ACT(1) == hN0)
    N0 = get (hN0, 'Value');
    set (hN1, 'Value', 1-N0);
   elseif (PPZ_WIN_ACT(1) == hN1)
    N1 = get (hN1, 'Value');
    set (hN0, 'Value', 1-N1);
   end  % radio button check.

  end  % while


R1 = get (hR1, 'string');
R2 = get (hR2, 'string');
R3 = get (hR3, 'string');
R4 = get (hR4, 'string');
[R1_val, retn] = sscanf (R1, '%f', 1);
[R2_val, retn] = sscanf (R2, '%f', 1);
[R3_val, retn] = sscanf (R3, '%f', 1);
[R4_val, retn] = sscanf (R4, '%f', 1);
if (R1_val ~= xmin  | ...
    R2_val ~= xmax  | ...
    R3_val ~= ymin  | ...
    R4_val ~= ymax)
  command = sprintf ('-R%s/%s/%s/%s', R1, R2, R3, R4);
  end

I1 = get (hI1, 'string'); 
I2 = get (hI2, 'string'); 
[I1_val, retn] = sscanf (I1, '%f', 1);
[I2_val, retn] = sscanf (I2, '%f', 1);
if (I1_val ~= grd_struct.x_inc  | ...
    I2_val ~= grd_struct.y_inc)
  command = [command  ' -I'  I1  '/'  I2];
  end  % if delta check.

F1 = get (hF1, 'value');
if (~isempty (F1) )
  if (F1 == 2)  temf = 'L';
   elseif (F1 == 3)  temf = 'D';
   else  temf = 'S';
   end
  command = [command  ' -F'  temf];
  end  % if there is a filter.

F2 = get (hF2, 'string');
if (~isempty (F2) )
  [tema, retn] = sscanf (F2, 'fd', 1);
  if (tema ~= F_default)
    command = [command   F2];
    end  % if
  end  % if there is a filter weight.

S = get (hS, 'string');
if (~isempty (S) )
  [tema, retn] = sscanf (S, '%d', 1);
  if (tema ~= S_default)
    command = [command  ' -S'  S];
    end  % if
  end  % if there is smoothing iterations.

D = get (hD, 'string');
if (~isempty (D) )
  [tema, retn] = sscanf (D, '%d', 1);
  if (tema ~= D_default)
    command = [command  ' -D'  D];
    end
  end  % if there is a distance.

E1 = get (hE1, 'string'); 
E2 = get (hE2, 'string'); 
if (strcmp (E1, num2str(empty_default)) ~= 1  | ...
    strcmp (E2, num2str(mask_val_default)) ~= 1)
  command = [command  ' -E'  E1  '/'  E2];
  end  % if empty value check.

V = get (hV, 'value'); 
if (V == 1)
  command = [command  ' -V'];
  end  % if there is a verbose request.


N = get (hN0, 'value'); 
if (N == 1)
  command = [command  ' -N'];
  end  % if pixel registration request.

close (gcf)


return

