% ppzinit_win
%

function  command = ppzinit_win (Z, def_tem)

global   PPZ_WIN_ACT

eps_default = def_tem(1);
empty_default = def_tem(2);
mask_val_default =  def_tem(3);
itmax_default = def_tem(4);
popt_default = def_tem(5);
NRNG_default = def_tem(6);
CAY_default = def_tem(7);

command = [];

xmin = min (Z(:,1));
xmax = max (Z(:,1));
ymin = min (Z(:,2));
ymax = max (Z(:,2));


hfwin = figure;
clf
set (hfwin, 'Position',[50 200 500 500])
set (hfwin, 'NumberTitle', 'off');
set (hfwin, 'Name', 'PPZINIT window');
set (hfwin, 'MenuBar', 'none');
cf_color = get (hfwin, 'Color');
set (gca, 'Visible','off')




     % Display various text strings and controls.
uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.05 0.82 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'X min');
hR1 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.05 0.80 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf))', ...
        'BackgroundColor', [1.0 1.0 0.80], ...
	'String', num2str(xmin));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.25 0.82 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'X max');
hR2 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.25 0.80 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
        'BackgroundColor', [1.0 1.0 0.80], ...
	'String', num2str(xmax));


uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.15 0.74 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Y min');
hR3 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.15 0.72 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
        'BackgroundColor', [1.0 1.0 0.80], ...
	'String', num2str(ymin));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.15 0.90 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Y max');
hR4 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.15 0.88 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
        'BackgroundColor', [1.0 1.0 0.80], ...
	'String', num2str(ymax));



uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.05 0.62 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Delta x');
hI1 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.05 0.60 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
        'BackgroundColor', [1.0 1.0 0.80], ...
	'String', '');

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.25 0.62 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Delta y');
hI2 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.25 0.60 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
        'BackgroundColor', [1.0 1.0 0.80], ...
	'String', '');



uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.05 0.52 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Search radius');
hS = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.05 0.50 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(NRNG_default));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.25 0.52 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Convergence');
hC = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.25 0.50 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(eps_default));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.45 0.52 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Iterations');
hN = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.45 0.50 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(itmax_default));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.65 0.52 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Tension');
hT = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.65 0.50 0.2 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(CAY_default));



uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.05 0.42 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Masking file');
hM = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.05 0.40 0.4 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', '');

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.50 0.42 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Empty');
hE1 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.50 0.40 0.15 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(empty_default));

uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.70 0.42 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Mask');
hE2 = uicontrol('Style', 'Edit', 'Units', 'Normalized', ...
	'Position',  [0.70 0.40 0.15 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
	'String', num2str(mask_val_default));


hV= uicontrol('Style', 'CheckBox', 'Units', 'Normalized', ...
	'Position',  [0.65 0.90 0.20 0.05], ...
	'FontSize', 12, ...
	'Callback', 'uiresume(gcf)', ...
        'Value', 0, ...
        'BackgroundColor', cf_color, ...
	'String', 'Verbose');


uicontrol('Style', 'Text', 'Units', 'Normalized', ...
	'Position',  [0.65 0.72 0.15 0.05], ...
	'FontSize', 10, ...
        'BackgroundColor', cf_color, ...
	'String', 'Initialization');
hP0 = uicontrol('Style', 'RadioButton', 'Units', 'Normalized', ...
	'Position',  [0.65 0.70 0.20 0.05], ...
	'FontSize', 12, ...
	'Callback', 'ppz_win_act', ...
        'Value', 1-popt_default, ...
        'BackgroundColor', cf_color, ...
	'String', 'Default');

hP1= uicontrol('Style', 'RadioButton', 'Units', 'Normalized', ...
	'Position',  [0.65 0.65 0.20 0.05], ...
	'FontSize', 12, ...
	'Callback', 'ppz_win_act', ...
        'Value', popt_default, ...
        'BackgroundColor', cf_color, ...
	'String', 'Average');


hgo = uicontrol('Style', 'Pushbutton', 'Units', 'Normalized', ...
	'Position',  [0.10 0.25 0.15 0.05], ...
	'Callback', 'ppz_win_act', ...
	'FontSize', 12, ...
	'String', 'OK');

hreset = uicontrol('Style', 'Pushbutton', 'Units', 'Normalized', ...
	'Position',  [0.40 0.25 0.15 0.05], ...
	'Callback', 'ppz_win_act', ...
	'FontSize', 12, ...
	'String', 'Reset');

hcancel = uicontrol('Style', 'Pushbutton', 'Units', 'Normalized', ...
	'Position',  [0.70 0.25 0.15 0.05], ...
	'Callback', 'ppz_win_act', ...
	'FontSize', 12, ...
	'String', 'Cancel');

hquit = uicontrol('Style', 'Pushbutton', 'Units', 'Normalized', ...
	'Position',  [0.70 0.15 0.15 0.05], ...
        'BackgroundColor', [1.0 0.8 0.8], ...
	'Callback', 'ppz_win_act', ...
	'FontSize', 12, ...
	'String', 'QUIT');

lokay = 0;
PPZ_WIN_ACT(1) = 0;
while (lokay == 0)
  disp  ('  ... waiting for ppzinit_win action.')
  uiwait (gcf)

  if (PPZ_WIN_ACT(1) == hquit)  
    quit
    end

  if (PPZ_WIN_ACT(1) == hcancel)  
    command = 'CANCEL';
    close (gcf)
    return
    end

  if (PPZ_WIN_ACT(1) == hreset)
    command = 'RESET';
    close (gcf)
    return
    end
    
  if (PPZ_WIN_ACT(1) == hgo)  
    I1 = get (hI1, 'string');
    if (isempty (I1)  )
      fprintf (2, '  *** DELTA X MUST BE SPECIFIED%c.\n', char(7));
      PPZ_WIN_ACT(1) = 0;
     else
      break;
     end  % if check for DELTA before leaving.
    end  % if done.
  if (PPZ_WIN_ACT(1) == hP0)
    P0 = get (hP0, 'Value');
    set (hP1, 'Value', 1-P0);
   elseif (PPZ_WIN_ACT(1) == hP1)
    P1 = get (hP1, 'Value');
    set (hP0, 'Value', 1-P1);
   end  % radio button check.

  end  % while


R1 = get (hR1, 'string');
R2 = get (hR2, 'string');
R3 = get (hR3, 'string');
R4 = get (hR4, 'string');
command = sprintf ('-R%s/%s/%s/%s', R1, R2, R3, R4);

I1 = get (hI1, 'string'); 
I2 = get (hI2, 'string'); 
if (isempty (I1)  )
  fprintf (2, '  *** DELTA X MUST BE SPECIFIED.\n');
  command = [];
  return
 else
  command = [command  ' -I'  I1];
 end  % if empty delta check.

if (~isempty (I2) )
  command = [command  '/'  I2];
  end  % if there is a delta y.

S = get (hS, 'string');
if (~isempty (S) )
  command = [command  ' -S'  S];
  end  % if there is a search radius.

C = get (hC, 'string');
if (~isempty (C) )
  command = [command  ' -C'  C];
  end  % if there is a convergence.

N = get (hN, 'string');
if (~isempty (N) )
  command = [command  ' -N'  N];
  end  % if there is a max iterations.

T = get (hT, 'string');
if (~isempty (T) )
  command = [command  ' -T'  T];
  end  % if there is a tension.

M = get (hM, 'string');
if (~isempty (M) )
  command = [command  ' -M'  M];
  end  % if there is a masking file.

E1 = get (hE1, 'string'); 
E2 = get (hE2, 'string'); 
if (~isempty (E1) )
  command = [command  ' -E'  E1];
  end  % if empty value check.

if (~isempty (E2) )
  command = [command  '/'  E2];
  end  % if there is a mask value.

V = get (hV, 'value'); 
if (V == 1)
  command = [command  ' -V'];
  end  % if there is a verbose request.


P = get (hP0, 'value'); 
if (P == 1)
  command = [command  ' -P0'];
 else
  command = [command  ' -P1'];
 end  % if Pregrid request.

close (gcf)

return

